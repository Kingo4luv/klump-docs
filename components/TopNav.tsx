import React, { useState, useCallback, useRef, useEffect } from 'react';
import Link from 'next/link';
import ThemeToggle from './header/ThemeToggle';
import { useSidebarStore } from '../hooks/useSidebarStore';
import { usePathname } from 'next/navigation';
import { SearchResults } from './SearchResults';
import { searchContent, type SearchResult } from '../lib/search';
import debounce from 'lodash/debounce';

export function TopNav({ children }) {
  const toggleSidebar = useSidebarStore((state) => state.toggle);
  const pathname = usePathname();
  const [searchResults, setSearchResults] = useState<SearchResult[]>([]);
  const [isSearching, setIsSearching] = useState(false);
  const [showResults, setShowResults] = useState(false);
  const searchInputRef = useRef<HTMLInputElement>(null);
  const searchContainerRef = useRef<HTMLDivElement>(null);

  const debouncedSearch = useCallback(
    debounce(async (query: string) => {
      if (query.trim()) {
        setIsSearching(true);
        // Add a small delay to ensure spinner is visible
        await new Promise(resolve => setTimeout(resolve, 500));
        const results = await searchContent(query);
        setSearchResults(results);
        setIsSearching(false);
      } else {
        setSearchResults([]);
      }
    }, 300),
    []
  );

  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const query = e.target.value;
    setShowResults(!!query.trim()); // Only show results if there's a query
    if (query.trim()) {
      debouncedSearch(query);
    } else {
      setSearchResults([]);
    }
  };

  const handleSearchFocus = () => {
    // Only show results if there's a query or we're actively searching
    const query = searchInputRef.current?.value;
    if (query?.trim() || isSearching) {
      setShowResults(true);
    }
  };

  const closeSearch = () => {
    setShowResults(false);
    setSearchResults([]);
    if (searchInputRef.current) {
      searchInputRef.current.value = '';
    }
  };

  // Handle click outside to close search results
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (searchContainerRef.current && !searchContainerRef.current.contains(event.target as Node)) {
        closeSearch();
      }
    };

    if (showResults) {
      document.addEventListener('mousedown', handleClickOutside);
    }

    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [showResults]);

  // Handle escape key to close search results
  useEffect(() => {
    const handleEscapeKey = (event: KeyboardEvent) => {
      if (event.key === 'Escape') {
        closeSearch();
        searchInputRef.current?.blur();
      }
    };

    if (showResults) {
      document.addEventListener('keydown', handleEscapeKey);
    }

    return () => {
      document.removeEventListener('keydown', handleEscapeKey);
    };
  }, [showResults]);

  return (
    <nav className='flex bg-white border border-[#E3E8EE] sticky top-0 z-10 px-0 lg:px-8'>
      <div className='mx-auto flex items-center justify-between w-full py-6 px-4'>
        <div className="w-full flex flex-col lg:flex-row lg:items-center space-x-0 lg:space-x-20 xl:space-x-40 space-y-3 lg:space-y-0">
          <div className="flex items-center justify-between">
            <Link href="/" className="">
              <svg width="159" height="27" viewBox="0 0 159 27" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M42.1334 1.6537H37.6509L30.059 10.4102V1.6537H26.1929V20.1436H30.059V14.7013L32.7019 11.7056L37.9314 20.1436H42.3574L35.4761 9.21453L42.1334 1.6537Z" fill="#192C69" />
                <path d="M48.9964 17.5933C48.4738 17.5933 48.1002 17.4628 47.8759 17.2011C47.6519 16.9395 47.5397 16.4825 47.5397 15.8282V-0.000188828H43.7016V16.2485C43.7016 17.7052 44.0144 18.7653 44.6405 19.4283C45.2658 20.0915 46.2606 20.4229 47.6239 20.4229C48.0906 20.4229 48.5623 20.3712 49.0386 20.2687C49.5151 20.1658 49.9116 20.0216 50.2292 19.8344L50.5654 17.313C50.2475 17.4066 49.9864 17.4768 49.7809 17.5231C49.5754 17.5701 49.314 17.5933 48.9964 17.5933Z" fill="#192C69" />
                <path d="M61.0704 13.6712C61.0704 14.325 60.9865 14.8898 60.8184 15.3661C60.6503 15.8422 60.4212 16.23 60.1321 16.5288C59.8424 16.8276 59.5108 17.0468 59.1375 17.1869C58.7637 17.3273 58.3812 17.3972 57.9888 17.3972C57.1484 17.3972 56.504 17.1869 56.0557 16.7668C55.6076 16.3464 55.3836 15.595 55.3836 14.5117V6.13504H51.5454V15.436C51.5454 16.6127 51.7649 17.5701 52.2038 18.3076C52.6425 19.0458 53.2355 19.5824 53.9826 19.9183C54.7295 20.2548 55.5699 20.4229 56.504 20.4229C57.643 20.4229 58.619 20.2029 59.4317 19.7645C60.2442 19.3258 60.8838 18.6394 61.3507 17.7052L61.4905 20.1426H64.9086V6.13504H61.0704V13.6712Z" fill="#192C69" />
                <path d="M87.2715 6.41622C86.5154 6.04291 85.679 5.856 84.7643 5.856C84.1293 5.856 83.5038 5.95874 82.8873 6.16396C82.2709 6.36994 81.7104 6.6779 81.2064 7.08859C80.7021 7.49954 80.3001 8.01296 80.0018 8.62938C79.5906 7.71467 78.9793 7.02323 78.1665 6.55634C77.3543 6.0897 76.4437 5.856 75.4351 5.856C74.4454 5.856 73.5444 6.0897 72.7316 6.55634C71.9194 7.02323 71.2793 7.72383 70.8127 8.65736L70.6728 6.13599H67.2271V20.1436H71.0652V12.7195C71.0652 11.8048 71.2191 11.0666 71.5273 10.5064C71.8355 9.94615 72.2276 9.53546 72.7039 9.27379C73.18 9.01237 73.6608 8.8814 74.1466 8.8814C74.8563 8.8814 75.4397 9.09653 75.8977 9.52579C76.3549 9.95581 76.5838 10.6841 76.5838 11.711V20.1436H80.4219V12.6076C80.4219 11.786 80.5574 11.0996 80.828 10.5483C81.0986 9.99777 81.4724 9.58199 81.949 9.30175C82.4253 9.02151 82.9433 8.8814 83.5038 8.8814C84.213 8.8814 84.7923 9.09653 85.2406 9.52579C85.6887 9.95581 85.9127 10.6841 85.9127 11.711V20.1436H89.7232L89.7509 10.9547C89.7692 9.79687 89.55 8.84428 89.0925 8.09714C88.6348 7.35027 88.028 6.79004 87.2715 6.41622Z" fill="#192C69" />
                <path d="M101.279 16.3752C100.691 17.1132 99.8828 17.4817 98.856 17.4817C98.2022 17.4817 97.6277 17.3092 97.1328 16.9634C96.6377 16.6181 96.2598 16.1186 95.9987 15.4648C95.7365 14.811 95.6065 14.0359 95.6065 13.1395C95.6065 12.2245 95.7464 11.4446 96.0264 10.8002C96.3064 10.1558 96.6942 9.66119 97.189 9.31534C97.6839 8.97 98.2579 8.79708 98.9119 8.79708C99.939 8.79708 100.737 9.16606 101.307 9.90353C101.877 10.6418 102.162 11.7202 102.162 13.1395C102.162 14.559 101.868 15.6375 101.279 16.3752ZM105.229 9.20345C104.716 8.12955 104.011 7.30307 103.114 6.72403C102.218 6.14525 101.2 5.85559 100.061 5.85559C99.1825 5.85559 98.3888 6.03741 97.6793 6.40182C96.9693 6.76598 96.3859 7.26569 95.9285 7.90068C95.7077 8.2066 95.5226 8.53541 95.3695 8.88456L95.2141 6.13558H91.7684V26.0264H95.6065V17.7037C95.9221 18.3468 96.3503 18.9118 96.909 19.3869C97.7213 20.0778 98.7438 20.4234 99.9764 20.4234C101.134 20.4234 102.166 20.134 103.072 19.555C103.978 18.9762 104.692 18.14 105.215 17.0473C105.738 15.9548 106 14.6429 106 13.1115C106 11.5801 105.743 10.2774 105.229 9.20345Z" fill="#192C69" />
                <path d="M15.433 14.2295L10.2689 13.015C10.2905 12.913 10.3157 12.8128 10.3442 12.7111C10.7368 11.3076 11.6022 10.1632 12.7249 9.40467L15.433 14.2295Z" fill="#5278C4" />
                <path d="M21.8501 15.9953C20.9766 19.1344 17.6987 20.977 14.5126 20.1201C11.6792 19.3566 9.895 16.6837 10.1407 13.8419L16.1683 15.2601C16.2001 15.2668 16.2319 15.2703 16.2637 15.2703C16.3923 15.2703 16.5175 15.21 16.5976 15.105C16.6962 14.971 16.7079 14.7922 16.6276 14.6488L13.4483 8.98505C14.7114 8.36532 16.2019 8.18655 17.675 8.5858C20.883 9.45449 22.7491 12.7642 21.8501 15.9953Z" fill="#5278C4" />
                <path d="M9.01275 13.5782C8.21934 15.8852 5.76993 17.2101 3.40418 16.5469C0.980202 15.8686 -0.475154 13.3577 0.141522 10.9167C0.767861 8.42911 3.31594 6.93866 5.81672 7.59882C6.34643 7.73894 6.82908 7.9579 7.25529 8.24017L4.15615 11.8054C4.05926 11.9158 4.029 12.0694 4.07248 12.2083C4.11775 12.3466 4.23294 12.4537 4.3751 12.487L9.01275 13.5782Z" fill="#74D2E7" />
                <path d="M9.21701 12.7676L5.24078 11.832L7.90559 8.76644C8.94618 9.77372 9.46088 11.2423 9.21701 12.7676Z" fill="#74D2E7" />
                <path d="M12.1501 8.38143C11.4131 8.71558 10.5714 8.81909 9.7594 8.60853C9.31336 8.49333 8.90547 8.28938 8.54996 8.02211L10.6149 5.64645L12.1501 8.38143Z" fill="#68C985" />
                <path d="M14.2102 5.97811C14.0098 6.78678 13.517 7.47339 12.8703 7.95605L11.0526 4.7201C10.986 4.60312 10.8672 4.52301 10.7322 4.50953C10.5951 4.49631 10.4629 4.54972 10.3744 4.65169L7.94531 7.44669C7.19538 6.55613 6.86606 5.31642 7.18673 4.13698C7.70805 2.21245 9.75796 1.05462 11.6708 1.60263C13.5269 2.13564 14.6748 4.11537 14.2102 5.97811Z" fill="#68C985" />
                <rect x="113" y="2.99902" width="46" height="19" rx="2" fill="#192C69" />
                <path d="M124.58 14.739H125.516C126.46 14.739 127.168 14.483 127.64 13.971C128.12 13.451 128.36 12.707 128.36 11.739V11.643C128.36 9.66702 127.408 8.67902 125.504 8.67902H124.58V14.739ZM122.984 15.999V7.41902H125.588C127.044 7.41902 128.148 7.79902 128.9 8.55902C129.652 9.31102 130.028 10.331 130.028 11.619V11.727C130.028 13.023 129.648 14.059 128.888 14.835C128.128 15.611 127.02 15.999 125.564 15.999H122.984ZM134.238 14.991C134.774 14.991 135.194 14.807 135.498 14.439C135.81 14.063 135.966 13.551 135.966 12.903V12.819C135.966 12.171 135.81 11.663 135.498 11.295C135.194 10.919 134.774 10.731 134.238 10.731C133.694 10.731 133.266 10.915 132.954 11.283C132.65 11.651 132.498 12.159 132.498 12.807V12.903C132.498 13.551 132.65 14.063 132.954 14.439C133.266 14.807 133.694 14.991 134.238 14.991ZM136.542 15.231C135.934 15.823 135.162 16.119 134.226 16.119C133.29 16.119 132.518 15.823 131.91 15.231C131.31 14.639 131.01 13.871 131.01 12.927V12.831C131.01 11.871 131.314 11.091 131.922 10.491C132.53 9.89102 133.302 9.59102 134.238 9.59102C135.166 9.59102 135.934 9.88702 136.542 10.479C137.15 11.071 137.454 11.843 137.454 12.795V12.891C137.454 13.859 137.15 14.639 136.542 15.231ZM141.514 16.119C140.594 16.119 139.834 15.835 139.234 15.267C138.642 14.691 138.346 13.915 138.346 12.939V12.843C138.346 11.867 138.65 11.083 139.258 10.491C139.866 9.89102 140.618 9.59102 141.514 9.59102C142.282 9.59102 142.93 9.78302 143.458 10.167C143.994 10.543 144.302 11.135 144.382 11.943H142.978C142.866 11.151 142.386 10.755 141.538 10.755C141.034 10.755 140.622 10.939 140.302 11.307C139.99 11.675 139.834 12.179 139.834 12.819V12.915C139.834 13.587 139.986 14.103 140.29 14.463C140.602 14.823 141.03 15.003 141.574 15.003C141.974 15.003 142.314 14.887 142.594 14.655C142.882 14.415 143.046 14.083 143.086 13.659H144.418C144.362 14.395 144.074 14.991 143.554 15.447C143.034 15.895 142.354 16.119 141.514 16.119ZM147.875 16.119C147.067 16.119 146.435 15.939 145.979 15.579C145.523 15.219 145.279 14.707 145.247 14.043H146.615C146.655 14.379 146.771 14.631 146.963 14.799C147.155 14.967 147.455 15.051 147.863 15.051C148.615 15.051 148.991 14.783 148.991 14.247C148.991 13.999 148.887 13.815 148.679 13.695C148.479 13.567 148.135 13.463 147.647 13.383C146.807 13.247 146.219 13.043 145.883 12.771C145.547 12.491 145.379 12.059 145.379 11.475C145.379 10.883 145.611 10.423 146.075 10.095C146.539 9.75902 147.091 9.59102 147.731 9.59102C149.235 9.59102 150.055 10.223 150.191 11.487H148.847C148.783 11.199 148.663 10.987 148.487 10.851C148.319 10.715 148.067 10.647 147.731 10.647C147.419 10.647 147.175 10.715 146.999 10.851C146.823 10.987 146.735 11.167 146.735 11.391C146.735 11.615 146.827 11.783 147.011 11.895C147.195 12.007 147.535 12.107 148.031 12.195C148.847 12.323 149.443 12.519 149.819 12.783C150.195 13.047 150.383 13.491 150.383 14.115C150.383 14.755 150.163 15.251 149.723 15.603C149.291 15.947 148.675 16.119 147.875 16.119Z" fill="white" />
              </svg>
            </Link>
            {/* only show on mobile when NOT on homepage */}
            {pathname !== '/' && (
            <button className='inline lg:hidden' onClick={toggleSidebar}>
              <svg width="25" height="25" viewBox="0 0 25 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M23.4375 16.4688C23.4375 16.9002 23.0877 17.25 22.6562 17.25H2.34375C1.91231 17.25 1.5625 16.9002 1.5625 16.4688C1.5625 16.0373 1.91231 15.6875 2.34375 15.6875H22.6562C23.0877 15.6875 23.4375 16.0373 23.4375 16.4688ZM2.34375 9.5625H22.6562C23.0877 9.5625 23.4375 9.21269 23.4375 8.78125C23.4375 8.34981 23.0877 8 22.6562 8H2.34375C1.91231 8 1.5625 8.34981 1.5625 8.78125C1.5625 9.21269 1.91231 9.5625 2.34375 9.5625Z" fill="black" />
              </svg>
            </button>
            )}
          </div>
          <div ref={searchContainerRef} className='relative h-[44px] w-full lg:w-[424px]'>
            <span className='absolute h-full w-10 flex justify-center items-center'>
              {isSearching ? (
                <svg className="animate-spin h-4 w-4 text-blue-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              ) : (
                <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <g clipPath="url(#clip0_122_6353)">
                    <path fillRule="evenodd" clipRule="evenodd" d="M7.9343 8.86218C7.02202 9.53996 5.88708 9.84745 4.75743 9.7229C3.62778 9.59834 2.5871 9.05096 1.84441 8.19071C1.10172 7.33046 0.712035 6.22105 0.753628 5.08531C0.79522 3.94958 1.26501 2.87165 2.06863 2.06802C2.87226 1.2644 3.95019 0.79461 5.08592 0.753017C6.22166 0.711424 7.33107 1.10111 8.19132 1.8438C9.05157 2.58649 9.59895 3.62717 9.72351 4.75682C9.84806 5.88647 9.54057 7.02141 8.8628 7.93368L11.433 10.5047C11.494 10.5656 11.5424 10.638 11.5754 10.7177C11.6084 10.7973 11.6253 10.8827 11.6253 10.9689C11.6253 11.0552 11.6084 11.1405 11.5754 11.2202C11.5424 11.2998 11.494 11.3722 11.433 11.4332C11.3721 11.4942 11.2997 11.5425 11.22 11.5755C11.1404 11.6085 11.055 11.6255 10.9688 11.6255C10.8826 11.6255 10.7972 11.6085 10.7175 11.5755C10.6379 11.5425 10.5655 11.4942 10.5045 11.4332L7.9343 8.86218ZM8.43755 5.25018C8.43755 6.09556 8.10172 6.90632 7.50395 7.50409C6.90618 8.10186 6.09542 8.43768 5.25004 8.43768C4.40467 8.43768 3.59391 8.10186 2.99614 7.50409C2.39837 6.90632 2.06254 6.09556 2.06254 5.25018C2.06254 4.40481 2.39837 3.59405 2.99614 2.99628C3.59391 2.39851 4.40467 2.06268 5.25004 2.06268C6.09542 2.06268 6.90618 2.39851 7.50395 2.99628C8.10172 3.59405 8.43755 4.40481 8.43755 5.25018Z" fill="#171717" />
                  </g>
                  <defs>
                    <clipPath id="clip0_122_6353">
                      <rect width="12" height="12" fill="white" />
                    </clipPath>
                  </defs>
                </svg>
              )}
            </span>
            <input
              ref={searchInputRef}
              type="text"
              placeholder="Search here..."
              className={`border border-[#D5DBE1] ${showResults ? 'rounded-t-md rounded-b-none' : 'rounded-md'} h-full w-full px-10 py-2 placeholder:text-[#A5ADBB] focus:outline-none`}
              onChange={handleSearchChange}
              onFocus={handleSearchFocus}
            />
            <SearchResults
              results={searchResults}
              isVisible={showResults}
              onClose={closeSearch}
              isSearching={isSearching}
            />
          </div>
        </div>
        {/* only show Get Started on desktop when on homepage */}
        {pathname === '/' && (
        <div className='hidden lg:flex space-x-4'>
          <Link href="/docs" className='flex space-x-2 items-center'>
            <span className='text-[#192C69] font-medium whitespace-nowrap'>Get Started</span>
            <span>
              <svg width="5" height="6" viewBox="0 0 5 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M4.25 3L0.75 0.75V5.25L4.25 3Z" fill="#192C69" stroke="#192C69" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
              </svg>
            </span>
          </Link>
          <ThemeToggle />
        </div>
        )}
        {/* show ThemeToggle on desktop when NOT on homepage */}
        {pathname !== '/' && (
        <div className='hidden lg:flex space-x-4'>
          <ThemeToggle />
        </div>
        )}
      </div>
    </nav>
  );
}
